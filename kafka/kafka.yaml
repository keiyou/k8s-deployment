---
apiVersion: v1
kind: Namespace
metadata:
  name: kafka
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-svc
  namespace: kafka
spec:
  ports:
  - port: 9093
    name: server
  clusterIP: None
  selector:
    app: kafka
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: kafka-pdb
  namespace: kafka
spec:
  selector:
    matchLabels:
      app: kafka
  minAvailable: 2
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: kafka
spec:
  serviceName: kafka-svc
  replicas: 3
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - kafka
              topologyKey: "kubernetes.io/hostname"
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
             - weight: 1
               podAffinityTerm:
                 labelSelector:
                    matchExpressions:
                      - key: "app"
                        operator: In
                        values:
                        - zk
                 topologyKey: "kubernetes.io/hostname"
      terminationGracePeriodSeconds: 300
      initContainers:
      - name: kafka-init
        image: steins023/kafka-test
        command:
        - bash
        - "-c"
        - |
          KAFKA_CONFIG_DIR="/opt/kafka/config"
          KAFKA_CONFIG_FILE="$KAFKA_CONFIG_DIR/server.properties"
          KAFKA_LOG4J_DIR="/opt/kafka/log4j_config"

          rm -f $KAFKA_CONFIG_FILE
          echo "Creating Kafka configuration"
          echo "#This file was autogenerated by initContainers DO NOT EDIT" >> $KAFKA_CONFIG_FILE
          echo "broker.id=${HOSTNAME##*-}" >> $KAFKA_CONFIG_FILE
          echo "listeners=PLAINTEXT://:9093" >> $KAFKA_CONFIG_FILE
          echo "zookeeper.connect=zk-client-svc.default.svc.cluster.local:2181" >> $KAFKA_CONFIG_FILE
          echo "log.dir=/var/lib/kafka" >> $KAFKA_CONFIG_FILE
          echo "auto.create.topics.enable=true" >> $KAFKA_CONFIG_FILE
          echo "auto.leader.rebalance.enable=true" >> $KAFKA_CONFIG_FILE
          echo "background.threads=10" >> $KAFKA_CONFIG_FILE
          echo "compression.type=producer" >> $KAFKA_CONFIG_FILE
          echo "delete.topic.enable=false" >> $KAFKA_CONFIG_FILE
          echo "leader.imbalance.check.interval.seconds=300" >> $KAFKA_CONFIG_FILE
          echo "leader.imbalance.per.broker.percentage=10" >> $KAFKA_CONFIG_FILE
          echo "log.flush.interval.messages=9223372036854775807" >> $KAFKA_CONFIG_FILE
          echo "log.flush.offset.checkpoint.interval.ms=60000" >> $KAFKA_CONFIG_FILE
          echo "log.flush.scheduler.interval.ms=9223372036854775807" >> $KAFKA_CONFIG_FILE
          echo "log.retention.bytes=-1" >> $KAFKA_CONFIG_FILE
          echo "log.retention.hours=168" >> $KAFKA_CONFIG_FILE
          echo "log.roll.hours=168" >> $KAFKA_CONFIG_FILE
          echo "log.roll.jitter.hours=0" >> $KAFKA_CONFIG_FILE
          echo "log.segment.bytes=1073741824" >> $KAFKA_CONFIG_FILE
          echo "log.segment.delete.delay.ms=60000" >> $KAFKA_CONFIG_FILE
          echo "message.max.bytes=1000012" >> $KAFKA_CONFIG_FILE
          echo "min.insync.replicas=1" >> $KAFKA_CONFIG_FILE
          echo "num.io.threads=8" >> $KAFKA_CONFIG_FILE
          echo "num.network.threads=3" >> $KAFKA_CONFIG_FILE
          echo "num.recovery.threads.per.data.dir=1" >> $KAFKA_CONFIG_FILE
          echo "num.replica.fetchers=1" >> $KAFKA_CONFIG_FILE
          echo "offset.metadata.max.bytes=4096" >> $KAFKA_CONFIG_FILE
          echo "offsets.commit.required.acks=-1" >> $KAFKA_CONFIG_FILE
          echo "offsets.commit.timeout.ms=5000" >> $KAFKA_CONFIG_FILE
          echo "offsets.load.buffer.size=5242880" >> $KAFKA_CONFIG_FILE
          echo "offsets.retention.check.interval.ms=600000" >> $KAFKA_CONFIG_FILE
          echo "offsets.retention.minutes=1440" >> $KAFKA_CONFIG_FILE
          echo "offsets.topic.compression.codec=0" >> $KAFKA_CONFIG_FILE
          echo "offsets.topic.num.partitions=50" >> $KAFKA_CONFIG_FILE
          echo "offsets.topic.replication.factor=3" >> $KAFKA_CONFIG_FILE
          echo "offsets.topic.segment.bytes=104857600" >> $KAFKA_CONFIG_FILE
          echo "queued.max.requests=500" >> $KAFKA_CONFIG_FILE
          echo "quota.consumer.default=9223372036854775807" >> $KAFKA_CONFIG_FILE
          echo "quota.producer.default=9223372036854775807" >> $KAFKA_CONFIG_FILE
          echo "replica.fetch.min.bytes=1" >> $KAFKA_CONFIG_FILE
          echo "replica.fetch.wait.max.ms=500" >> $KAFKA_CONFIG_FILE
          echo "replica.high.watermark.checkpoint.interval.ms=5000" >> $KAFKA_CONFIG_FILE
          echo "replica.lag.time.max.ms=10000" >> $KAFKA_CONFIG_FILE
          echo "replica.socket.receive.buffer.bytes=65536" >> $KAFKA_CONFIG_FILE
          echo "replica.socket.timeout.ms=30000" >> $KAFKA_CONFIG_FILE
          echo "request.timeout.ms=30000" >> $KAFKA_CONFIG_FILE
          echo "socket.receive.buffer.bytes=102400" >> $KAFKA_CONFIG_FILE
          echo "socket.request.max.bytes=104857600" >> $KAFKA_CONFIG_FILE
          echo "socket.send.buffer.bytes=102400" >> $KAFKA_CONFIG_FILE
          echo "unclean.leader.election.enable=true" >> $KAFKA_CONFIG_FILE
          echo "zookeeper.session.timeout.ms=6000" >> $KAFKA_CONFIG_FILE
          echo "zookeeper.set.acl=false" >> $KAFKA_CONFIG_FILE
          echo "broker.id.generation.enable=true" >> $KAFKA_CONFIG_FILE
          echo "connections.max.idle.ms=600000" >> $KAFKA_CONFIG_FILE
          echo "controlled.shutdown.enable=true" >> $KAFKA_CONFIG_FILE
          echo "controlled.shutdown.max.retries=3" >> $KAFKA_CONFIG_FILE
          echo "controlled.shutdown.retry.backoff.ms=5000" >> $KAFKA_CONFIG_FILE
          echo "controller.socket.timeout.ms=30000" >> $KAFKA_CONFIG_FILE
          echo "default.replication.factor=1" >> $KAFKA_CONFIG_FILE
          echo "fetch.purgatory.purge.interval.requests=1000" >> $KAFKA_CONFIG_FILE
          echo "group.max.session.timeout.ms=300000" >> $KAFKA_CONFIG_FILE
          echo "group.min.session.timeout.ms=6000" >> $KAFKA_CONFIG_FILE
          echo "inter.broker.protocol.version=0.10.2-IV0" >> $KAFKA_CONFIG_FILE
          echo "log.cleaner.backoff.ms=15000" >> $KAFKA_CONFIG_FILE
          echo "log.cleaner.dedupe.buffer.size=134217728" >> $KAFKA_CONFIG_FILE
          echo "log.cleaner.delete.retention.ms=86400000" >> $KAFKA_CONFIG_FILE
          echo "log.cleaner.enable=true" >> $KAFKA_CONFIG_FILE
          echo "log.cleaner.io.buffer.load.factor=0.9" >> $KAFKA_CONFIG_FILE
          echo "log.cleaner.io.buffer.size=524288" >> $KAFKA_CONFIG_FILE
          echo "log.cleaner.io.max.bytes.per.second=1.7976931348623157E308" >> $KAFKA_CONFIG_FILE
          echo "log.cleaner.min.cleanable.ratio=0.5" >> $KAFKA_CONFIG_FILE
          echo "log.cleaner.min.compaction.lag.ms=0" >> $KAFKA_CONFIG_FILE
          echo "log.cleaner.threads=1" >> $KAFKA_CONFIG_FILE
          echo "log.cleanup.policy=delete" >> $KAFKA_CONFIG_FILE
          echo "log.index.interval.bytes=4096" >> $KAFKA_CONFIG_FILE
          echo "log.index.size.max.bytes=10485760" >> $KAFKA_CONFIG_FILE
          echo "log.message.timestamp.difference.max.ms=9223372036854775807" >> $KAFKA_CONFIG_FILE
          echo "log.message.timestamp.type=CreateTime" >> $KAFKA_CONFIG_FILE
          echo "log.preallocate=false" >> $KAFKA_CONFIG_FILE
          echo "log.retention.check.interval.ms=300000" >> $KAFKA_CONFIG_FILE
          echo "max.connections.per.ip=2147483647" >> $KAFKA_CONFIG_FILE
          echo "num.partitions=1" >> $KAFKA_CONFIG_FILE
          echo "producer.purgatory.purge.interval.requests=1000" >> $KAFKA_CONFIG_FILE
          echo "replica.fetch.backoff.ms=1000" >> $KAFKA_CONFIG_FILE
          echo "replica.fetch.max.bytes=1048576" >> $KAFKA_CONFIG_FILE
          echo "replica.fetch.response.max.bytes=10485760" >> $KAFKA_CONFIG_FILE
          echo "reserved.broker.max.id=1000" >> $KAFKA_CONFIG_FILE

          mv $KAFKA_LOG4J_DIR/log4j.properties $KAFKA_CONFIG_DIR/log4j.properties
          mv $KAFKA_LOG4J_DIR/tools-log4j.properties $KAFKA_CONFIG_DIR/tools-log4j.properties

        volumeMounts:
        - name: conf
          mountPath: /opt/kafka/config
      containers:
      - name: kafka
        imagePullPolicy: Always
        image: steins023/kafka-test
        resources:
          requests:
            memory: "1Gi"
            cpu: 500m
        ports:
        - containerPort: 9093
          name: server
        command:
        - sh
        - -c
        - "exec kafka-server-start.sh /opt/kafka/config/server.properties"
        env:
        - name: KAFKA_HEAP_OPTS
          value : "-Xmx512M -Xms512M"
        - name: KAFKA_OPTS
          value: "-Dlogging.level=INFO"
        volumeMounts:
        - name: datadir
          mountPath: /var/lib/kafka
        - name: conf
          mountPath: /opt/kafka/config
        readinessProbe:
          exec:
           command:
            - sh
            - -c
            - "/opt/kafka/bin/kafka-broker-api-versions.sh --bootstrap-server=localhost:9093"
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
      - name: datadir
        emptyDir: {}
      - name: conf
        emptyDir: {}
  # volumeClaimTemplates:
  # - metadata:
  #     name: datadir
  #   spec:
  #     accessModes: [ "ReadWriteOnce" ]
  #     resources:
  #       requests:
  #         storage: 10Gi
